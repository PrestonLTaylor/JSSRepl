@page "/"
@inject IJSSService jss
@inject IGitHubService github

<PageTitle>JSS Repl</PageTitle>

<h3 class="title-bar">JSS Repl</h3>

<article class="content">
    <EditForm class="repl-console" EditContext="editContext" OnSubmit="Execute" FormName="REPLConsole" Enhance>
        <InputTextArea class="form-control script-input" spellcheck="false" placeholder="Enter your script here..." @bind-Value="Script" />

        <button class="btn btn-outline-secondary execute-button" type="submit">Execute</button>
    </EditForm>
    <small class="form-text text-muted">Executed using the JSS JavaScript engine (built from <a class="link-primary" href="@BuildCommitLink">@ShortBuildCommitHash</a>).</small> <br />

    <textarea class="output form-control-plaintext" readonly>@Result</textarea>
</article>

@code {
    protected override async Task OnInitializedAsync()
    {
        editContext = new(Script);

        // NOTE: We use the latest commit hash from the master branch as that will be the commit used in the latest JSS NuGet package
        // We also use dependabot so we can easily update the NuGet package so it will be up-to-date
        var latestCommit = await github.GetLatestCommitAsync();
        ShortBuildCommitHash = latestCommit.Sha[0..7];
        BuildCommitLink = latestCommit.HtmlUrl;
    }

    private void Execute()
    {
        Result = jss.ExecuteStringAsJavaScript(Script);
    }

    [SupplyParameterFromForm]
    private string Script { get; set; } = "";

    private string Result { get; set; } = "";

    private string ShortBuildCommitHash { get; set; } = "";
    private string BuildCommitLink { get; set; } = "";

    private EditContext? editContext;
}
